stages:
  - build
  - test
  - deploy

variables:
  PROJECT_ID: regal-scholar-423322
  REGION: us-central1
  REPO: gitlab-app
  IMAGE_TAG: ${CI_COMMIT_REF_SLUG}  # Use branch name or commit SHA as the image tag
  DOCKER_REGISTRY: ${REGION}-docker.pkg.dev
  IMAGE_NAME: ${DOCKER_REGISTRY}/${PROJECT_ID}/${REPO}/chatapp

before_script:
  # Authenticate Google Cloud SDK using the JSON key file
  - echo "$GOOGLE_APPLICATION_CREDENTIALS"
  - gcloud auth activate-service-account gitlab-ci-service-account@regal-scholar-423322-h0.iam.gserviceaccount.com --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
  - gcloud config set project ${PROJECT_ID}
  - gcloud auth configure-docker ${DOCKER_REGISTRY}

build_image:
  stage: build
  script:
    - docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .
    - docker push ${IMAGE_NAME}:${IMAGE_TAG}
  tags:
    - practice-1

test:
  stage: test
  script:
    - 'C:\Users\ashwa\AppData\Local\Programs\Python\Python312\python.exe -m pip install -r requirements.txt'
    - 'C:\Users\ashwa\AppData\Local\Programs\Python\Python312\python.exe -m pytest'
  tags:
    - practice-1

deploy_to_dev:
  stage: deploy
  script:
    - docker pull ${IMAGE_NAME}:${IMAGE_TAG}
    - docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:dev
    - docker push ${IMAGE_NAME}:dev
  environment:
    name: development
    url: https://dev.example.com
  only:
    - develop
  tags:
    - practice-1

deploy_to_test:
  stage: deploy
  script:
    - docker pull ${IMAGE_NAME}:${IMAGE_TAG}
    - docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:test
    - docker push ${IMAGE_NAME}:test
  environment:
    name: testing
    url: https://test.example.com
  only:
    - merge_requests
  tags:
    - practice-1

deploy_to_prod:
  stage: deploy
  script:
    - docker pull ${IMAGE_NAME}:${IMAGE_TAG}
    - docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:prod
    - docker push ${IMAGE_NAME}:prod
  environment:
    name: production
    url: https://www.example.com
  only:
    - main
  tags:
    - practice-1
